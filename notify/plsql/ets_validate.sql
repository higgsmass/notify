SET ECHO OFF;
SET SQLN OFF;
SET VERIFY OFF;
SET FEEDBACK OFF;
SET SERVEROUTPUT ON;
SET FEEDBACK OFF
SET HEADING OFF
SET TRIMSPOOL ON
SET TAB OFF

SET PAGES 0;
SET LINESIZE 1000;
SET LONG 1000000;

DECLARE

    L_BATCH_ID NUMBER;
    L_CODES_FOUND NUMBER;

BEGIN

    L_BATCH_ID := '&1';
    L_CODES_FOUND := -1;

    
    DBMS_OUTPUT.PUT_LINE('Batch ID = ' || L_BATCH_ID);
    
    -- CORE_ACT_CD_IFC
    MERGE INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT DISTINCT CONCEPT_CODE, CODINGSCHEME_NAME
        FROM CTB_CORE_ACT_CD_IFC
        WHERE BATCH_ID = L_BATCH_ID 
    ) ACTCD
    ON ( 
        ETSVAL.CONCEPT_CODE = ACTCD.CONCEPT_CODE AND
        ETSVAL.CODE_SYSTEM_NAME = ACTCD.CODINGSCHEME_NAME 
    )
    
    WHEN NOT MATCHED THEN
        INSERT (CONCEPT_CODE, CODE_SYSTEM_NAME) 
        VALUES (ACTCD.CONCEPT_CODE, ACTCD.CODINGSCHEME_NAME);


    -- CORE_ROLE_CD_IFC
    MERGE INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT DISTINCT CONCEPT_CODE, CODINGSCHEME_NAME
        FROM CTB_CORE_ROLE_CD_IFC
        WHERE BATCH_ID = L_BATCH_ID 
    ) ROLCD
    ON ( 
        ETSVAL.CONCEPT_CODE = ROLCD.CONCEPT_CODE AND
        ETSVAL.CODE_SYSTEM_NAME = ROLCD.CODINGSCHEME_NAME 
    )
    
    WHEN NOT MATCHED THEN
        INSERT (CONCEPT_CODE, CODE_SYSTEM_NAME) 
        VALUES (ROLCD.CONCEPT_CODE, ROLCD.CODINGSCHEME_NAME);


    -- CORE_ENTY_CD_IFC
    MERGE INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT DISTINCT CONCEPT_CODE, CODINGSCHEME_NAME
        FROM CTB_CORE_ENTY_CD_IFC
        WHERE BATCH_ID = L_BATCH_ID 
    ) ENTCD

    ON ( 
        ETSVAL.CONCEPT_CODE = ENTCD.CONCEPT_CODE AND
        ETSVAL.CODE_SYSTEM_NAME = ENTCD.CODINGSCHEME_NAME 
    )

    WHEN NOT MATCHED THEN
        INSERT (CONCEPT_CODE, CODE_SYSTEM_NAME) 
        VALUES (ENTCD.CONCEPT_CODE, ENTCD.CODINGSCHEME_NAME);


    -- CORE_ACT_REL_CD_IFC
    MERGE INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT DISTINCT CONCEPT_CODE, CODINGSCHEME_NAME
        FROM CTB_CORE_ACT_REL_CD_IFC
        WHERE BATCH_ID = L_BATCH_ID 
    ) ARCD

    ON ( 
        ETSVAL.CONCEPT_CODE = ARCD.CONCEPT_CODE AND
     ETSVAL.CODE_SYSTEM_NAME = ARCD.CODINGSCHEME_NAME 
    )

    WHEN NOT MATCHED THEN
        INSERT (CONCEPT_CODE, CODE_SYSTEM_NAME) 
        VALUES (ARCD.CONCEPT_CODE, ARCD.CODINGSCHEME_NAME);

  
    -- CTB_CORE_PRTCPTN_CD_IFC
    MERGE INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT DISTINCT CONCEPT_CODE, CODINGSCHEME_NAME
        FROM CTB_CORE_PRTCPTN_CD_IFC
        WHERE BATCH_ID = L_BATCH_ID 
    ) PARTCD

    ON ( 
        ETSVAL.CONCEPT_CODE = PARTCD.CONCEPT_CODE AND
        ETSVAL.CODE_SYSTEM_NAME = PARTCD.CODINGSCHEME_NAME 
    )

    WHEN NOT MATCHED THEN
        INSERT (CONCEPT_CODE, CODE_SYSTEM_NAME) 
        VALUES (PARTCD.CONCEPT_CODE, PARTCD.CODINGSCHEME_NAME);

  
    MERGE /*+ PARALLEL(ETSVAL) */
    INTO HSIES_ETS_VALIDATION ETSVAL
    USING ( 
        SELECT /*+ FULL(V)  PARALLEL(V) */
        V.CODINGSCHEME_NAME,
        V.CONCEPT_CODE,
        V.VERSION_DEFAULT_FLAG
        FROM HCT_ET_CONCEPTS_V V) ETS 
    ON (
        ETSVAL.CODE_SYSTEM_NAME = ETS.CODINGSCHEME_NAME AND 
        ETSVAL.CONCEPT_CODE = ETS.CONCEPT_CODE AND 
        ETS.VERSION_DEFAULT_FLAG = 'Y'
    )

    WHEN MATCHED THEN
        UPDATE SET ETSVAL.FOUND_FLAG = 'Y'
        WHERE ETSVAL.FOUND_FLAG IS NULL;


    SELECT COUNT(1) INTO L_CODES_FOUND FROM HSIES_ETS_VALIDATION 
    WHERE FOUND_FLAG IS NULL;

    DBMS_OUTPUT.PUT_LINE('L_CODES_FOUND = ' || L_CODES_FOUND);
    
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('ERROR' || SQLERRM);
END
;
/
EXIT
